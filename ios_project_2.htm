<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" lang="en"><head>


  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">
  <title>
    IOS: Projekt 2
  </title>

  <meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;">
<meta name="robots" content="noindex,nofollow">
<meta name="date" content="2010-02-22T10:23:58+0100">
<meta name="keywords" content="vyuka,ios,start">
<!--
<link rel="search" type="application/opensearchdescription+xml" href="https://www.fit.vutbr.cz/%7Esmrcka/w/lib/exe/opensearch.php" title="AS'wiki">
<link rel="start" href="https://www.fit.vutbr.cz/%7Esmrcka/w/">
<link rel="contents" href="https://www.fit.vutbr.cz/%7Esmrcka/w/doku.php?id=vyuka:ios:start&amp;do=index" title="Index">
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="https://www.fit.vutbr.cz/%7Esmrcka/w/feed.php">
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="https://www.fit.vutbr.cz/%7Esmrcka/w/feed.php?mode=list&amp;ns=vyuka:ios">
<link rel="edit" title="Edit this page" href="https://www.fit.vutbr.cz/%7Esmrcka/w/doku.php?id=vyuka:ios:start&amp;do=edit">
<link rel="alternate" type="text/html" title="Plain HTML" href="https://www.fit.vutbr.cz/%7Esmrcka/w/doku.php?do=export_xhtml&amp;id=vyuka:ios:start">
<link rel="alternate" type="text/plain" title="Wiki Markup" href="https://www.fit.vutbr.cz/%7Esmrcka/w/doku.php?do=export_raw&amp;id=vyuka:ios:start">
<link rel="canonical" href="https://www.fit.vutbr.cz/%7Esmrcka/w/doku.php?id=vyuka:ios:start">
-->
<link rel="stylesheet" media="all" type="text/css" href="doku.php_soubory/css_003.css">
<link rel="stylesheet" media="screen" type="text/css" href="doku.php_soubory/css_002.css">
<link rel="stylesheet" media="print" type="text/css" href="doku.php_soubory/css.css">
<script type="text/javascript" charset="utf-8"><!--//--><![CDATA[//><!--
var NS='vyuka:ios';var SIG=' --- //[[smrcka@fit.vutbr.cz|Vyuèující IOS]] 22.02.2010 10:23//';var JSINFO = {"id":"vyuka:ios:start","namespace":"vyuka:ios"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="doku.php_soubory/js.php"></script>

  <link rel="shortcut icon" href="https://www.fit.vutbr.cz/%7Esmrcka/w/lib/tpl/default/images/favicon.ico">

  </head><body>
<div class="dokuwiki">
    
  
  <div class="page">
    <!-- wikipage start -->
    <!-- TOC START -->
<!--
<div class="toc">
<div style="cursor: pointer;" class="tocheader toctoggle" id="toc__header"><span class="toc_close" style="cursor: pointer;" id="toc__toggle"><span>-</span></span>Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="level1"><div class="li"><span class="li"><a href="#ukol" class="toc">2. Úkol</a></span></div>
<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="#common_part" class="toc">Spoleèná èást</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="#varianta_a" class="toc">Varianta A</a></span></div></li>
<li class="level2"><div class="li"><span class="li"><a href="#varianta_b" class="toc">Varianta B</a></span></div></li>
</ul>
</li>
</ul>
</div>
</div>
-->
<!-- TOC END -->



<h1><a name="ukol" id="ukol">2. Projekt 2010/2011</a></h1>
<div class="level1">

<p>
<strong> Podmínky vypracování </strong>
</p>

<ul>
<li class="level1"><div class="li"> Projekt implementujte v jazyku C.</div>
</li>
<li class="level1"><div class="li"> Komentujte zdrojové kódy, programujte pøehlednì. Souèástí hodnocení bude i kvalita zdrojového kódu.</div>
</li>
<li class="level1"><div class="li"> Kontrolujte, zda se v¹echny procesy ukonèují korektnì a pøi ukonèování správnì ru¹íte v¹echny alokované zdroje
(napø. pro prostøedky System V mù¾ete pomocí pøíkazu <code>ipcs</code> zjistit, jaké zdroje jsou v systému alokovány).</div>
</li>
<li class="level1"><div class="li"> Dodr¾ujte syntax zadaných jmen,
formátu souborù a formátu výstupních dat! Ètìte pozornì zadání a
poznámky k vypracování u jednotlivých zadání.</div>
</li>
<li class="level1"><div class="li"> <strong>Dotazy k zadání:</strong> Ve¹keré nejasnosti a dotazy øe¹te pouze prostøednictvím diskuzního fóra <em>Projekty</em>.</div>
</li>
</ul>

<p>
<strong> Podmínky pøekladu </strong>
</p>

<ul>
<li class="level1"><div class="li"> Pro pøeklad pou¾ívejte nástroj <i>make</i>. Souèástí odevzdání bude soubor <code>Makefile</code>.</div>
</li>
<li class="level1"><div class="li"> Pøeklad se provede pøíkazem <code>make</code> v adresáøi, kde je umístìn soubor Makefile.</div>
</li>
<li class="level1"><div class="li"> Zdrojové kódy pøekládejte s pøepínaèi <code>-std=gnu99 -Wall -Wextra -Werror -pedantic</code>.</div>
</li>
</ul>

<p>
<strong> Odevzdání </strong>
</p>

<ul>
<li class="level1"><div class="li"> Souèástí odevzdání budou pouze soubory se zdrojovými kódy (<code>*.c</code>, pøíp. <code>*.h</code>) a soubor <code>Makefile</code>.
Tyto soubory zabalte do archivu s názvem xlogin.zip, kde xlogin je vá¹ login.
</div>
</li>
<li class="level1"><div class="li"> Archiv vytvoøte tak, aby po rozbalení byl soubor Makefile umístìn ve stejném adresáøi jako je archiv. </div>
</li>
<li class="level1"><div class="li"> Archiv xlogin.zip odevzdejte prostøednictvím informaèního systému, termín <em>Projekt 2</em>.</div>
</li>
<li class="level1"><div class="li"> Pokud nebude dodr¾ena forma odevzdání nebo projekt nepùjde pøelo¾it, bude projekt hodnocen 0 body.</div>
</li>
</ul>

<p>
<strong> Opravy zadání </strong>
<ul>
<li class="level1"><div class="li"> Opravy zadání (chyby, pøeklepy, vyjasnìní) jsou v textu zvýraznìny èervenì.
</div>
</li>
<li class="level1"><div class="li"> První oprava byla provedena 4.4.2011.
</div>
</li>
</ul>
</p>

</div>

<h2><a name="common_part" id="common_part">Zadání projektu</a></h2>
<div class="level2">

<p>
<strong>Cíl:</strong> Implementujte upravenou variantu synchronizaèního problému <i>spícího holièe</i>. V holièství je jeden holiè a Q ¾idlí v èekárnì. Kdy¾ holiè
ostøíhá zákazníka, zkontroluje èekárnu. Pokud zde èeká zákazník, holiè ho usadí do svého køesla a ostøíhá. Pokud je èekárna prázdná, holiè
se posadí do svého køesla a usne. Zákazník, který pøijde, usedne do èekárny. Pokud holiè spí, vzbudí ho a nechá se ostøíhat, jinak
èeká, a¾ na nìj pøijde øada. Pokud je èekárna plná (v¹echny ¾idle Q jsou obsazeny), zákazník odchází neostøíhán.
</p>

<p>
Ka¾dému zákazníkovi a holièi odpovídá jeden proces. Pro synchronizaci procesù pou¾ijte semafory (System V nebo POSIX).
</p>

<p>
<strong>Základní promìnné:</strong>
<pre>
Q    : poèet ¾idlí
GenC : rozsah pro generování zákazníkù [ms]
GenB : rozsah pro generování doby obsluhy [ms]
</pre>
</p>

<p>
<strong>Implementaèní detaily:</strong> Po spu¹tìní vytváøí hlavní proces jeden podproces pro holièe.
Hlavní proces èeká na ukonèení v¹ech svých potomkù a poté se ukonèí. <!-- Ka¾dý proces holièe bude identifikovatelný podle èísla (1 a¾ B). -->
Ka¾dý zákazník bude idenfikován celým èíslem, zaèínajícím od 1.
Zákazníci jsou vytváøeni v èasových intervalech, které jsou generovány náhodnì v rozmezí 0 a¾ GenC v ms.
Ostøíhání zákazníka simulujte uspáním procesu holièe na dobu, která je generována náhodnì v rozmezí 0 a¾ GenB v ms. Proces zákazníká èeká, a¾ ho proces
holièe informuje o dokonèení støíhání po svém vzbuzení. Pro proces zákazníka nepou¾ívejte aktivní èekání ani sleep.
</p>

<p>
<strong>Výstupy procesù:</strong>
Ka¾dý zákazník a holiè poskytuje informace o právì provádìné akci.
<br>
Formát výstupù:
<ul>
<li class="level1"><div class="li">holiè kontroluje èekárnu, zda je dal¹í zákazník: <pre>A: barber: checks</pre></div></li>
<li class="level1"><div class="li">holiè je pøipraven pøijmout zákazníka z èekárny: <pre>A: barber: ready</pre></div></li>
<li class="level1"><div class="li">holiè ostøíhal zákazníka: <pre>A: barber: finished</pre></div></li>
<li class="level1"><div class="li">zákazník je vytvoøen: <pre>A: customer C: created</pre></div></li>
<li class="level1"><div class="li">zákazník vstupuje do èekárny: <pre>A: customer C: enters</pre></div></li>
<li class="level1"><div class="li">zákazník usedá do køesla holièe; tiskne se a¾ poté, co je holiè pøipraven (barber: ready): <pre>A: customer C: ready</pre></div></li>
<li class="level1"><div class="li">zákazník odchází ostøíhán; tiskne se a¾ poté, co holiè dokonèil støíhání (barber: finished): <pre>A: customer C: served</pre></div></li>
<li class="level1"><div class="li">zákazník odchází neobslou¾en: <pre>A: customer C: refused</pre></div></li>
</ul>
</p>

<p>
<strong>Popis promìnných ve výstupu:</strong>
<ul>
<li class="level1"><div class="li"> <strong>C</strong>: èíslo <font color="red"><del>holièe</del> zákazníka</font></div></li>
<li class="level1"><div class="li"> <strong>A</strong>: poøadové èíslo provádìné akce. Akce se èíslují od jednièky. Èíslo akce je ulo¾eno ve sdílené pamìti (C funkce <i>shmXXX</i>), pøed ka¾dou akcí se èíslo pøeète, pou¾ije a zpìt zapí¹e nová hodnota.</div></li>
</ul>
</p>

<p>
<strong>Poznámky k vypracování:</strong>
<ul>
<li class="level1"><div class="li"> Po pøekladu vznikne spustitelný soubor se jménem <i>barbers</i>, který bude umístìn ve stejném adresáøi jako soubor Makefile.</div></li>
<li class="level1"><div class="li"> Pøi spou¹tìní se zadají celá kladná èísla Q, GenC, GenB a N a øetìzec F v tomto poøadí (viz ukázka; význam prvních promìnných viz vý¹e).
Èíslo N vyjadøuje poèet celkovì vygerenovaných a obslou¾ených<font color="red"> nebo odmítnutých</font> zákazníkù (<font color="red">tj. N procesù zákazníka vznikne a zanikne</font>), po kterých se aplikace ukonèí (uvolní se v¹echny zdroje a ukonèí se v¹echny procesy).
Øetìzec F reprezentuje název souboru, do kterého se budou ukládat generované informace. Pokud se místo názvu uvede znak -, budou se informace vypisovat na standardní výstup.</div></li>
<li class="level1"><div class="li"> Pøístup k souboru (zápis informací) musí být výluèný; pokud zapisuje jeden proces a dal¹í chce také zapisovat, musí poèkat na uvolnìní zdroje. Stejnì tak musí být zaji¹tìn výluèný pøístup k èítaèi akcí. </div></li>
<li class="level1"><div class="li"> Implementujte problém tak, abyste pøede¹li uváznutí (deadlock) a vyhladovìní (starvation). </div></li>
<li class="level1"><div class="li"> Pokud nìkterý se vstupù nebude odpovídat oèekávanému formátu, program vytiskne chybové hlá¹ení a ukonèí se.</div></li>
<li class="level1"><div class="li"> Pro generování unikátních klíèù (sdílená pamì» apod.) pou¾ijte funkci ftok.</div>
<li class="level1"><div class="li"> C funkce: fork, wait, shmget, shmat, semget, semctl, sem_open, ...</div>
</ul>
</p>


<p>
<strong>Ukázka spu¹tìní programu:</strong>
</p>
<pre class="code">$ ./barbers 10 500 1000 20 barbers.out
</pre>
10 ¾idlí v èekárnì, zákazníci se generují náhodnì v intervalu 0 a¾ 500 ms, doba obsluhy zákazníka je 0 a¾ 1000 ms a poèet celkovì vygenerovaných a obslou¾ených zákazníkù je 20. Informace se budou ukládat do souboru barbres.out.
</p>
<p><br></p>
</p>
<pre class="code">$ ./barbers 20 200 800 20 -
</pre>
20 ¾idlí v èekárnì, zákazníci se generují náhodnì v intervalu 0 a¾ 200 ms, doba obsluhy zákazníka je 0 a¾ 800 ms a poèet celkovì vygenerovaných a obslou¾ených zákazníkù je 20. Informace se budou vypisovat na standardní výstup.
</p>

<p><br></p>

<p>
<strong>Ukázka výstupu programu:</strong>
</p>
<pre class="code">$ ./barbers 10 0 0 1 -
</pre>
<pre>
1: barber: checks
2: customer 1: created
3: customer 1: enters
4: barber: ready
5: customer 1: ready
6: barber: finished
7: customer 1: served
</pre>
</p>

<p>Poøadí se mù¾e li¹it v závislosti na èasování, ve vý¹e ovedeném pøíkladu mù¾e být napø. prohozen první a druhý øádek (samozøejmì se správným
èíslováním akcí), pokud proces holièe bude plánován pozdìji ne¾ proces zákazníka. 
V rámci jednoho procesu musí být zachováno správné poøadí, napø. pro zákazníka jsou mo¾né dvì korektní sekvence:
<pre>created
enters
ready
served</pre>
nebo
<pre>created
enters
refused</pre>
</p>

Také musí být zachováno korektní poøadí akcí mezi procesy, napø. 
<ul>
<li class="level1"><div class="li">barber ready bude v¾dy pøed customer ready,</div></li>  
<li class="level1"><div class="li">barber finished bude v¾dy pøed customer <font color="red"><del>finished</del> served</font>,</div></li> 
<li class="level1"><div class="li">mezi barber ready a barber finished mù¾e být právì jeden customer ready,</div></li> 
<li class="level1"><div class="li">...</div></li> 
</ul>


<!--
<p>
<strong>Pou¾ití programu:</strong>

</p>
<pre class="code">$ ./findproc N
findproc prints PID of every process that conforms to specific criteria
usage: findproc criterion1 [criterion2 [...]]
criteria:
    -n regexp      the process name matches regexp
    -a regexp      an argument of a process matches regexp
    -c regexp      the current working directory matches regexp
    -x file        the process executable file is the same as file
</pre>
-->

</div>

<br><hr><br>

</body></html>

